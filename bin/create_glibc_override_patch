################################################################################
#                                                                              #
#                         Create GLIBC override patches                        #
#                                                                              #
# Creates the patch files for the stock glibc source changes required to get   #
# to an override version of glibc. Creates patches for both the source files   #
# and for the libc.map file so that the global routines exposed can be reached #
# outside of glibc.                                                            #
#                                                                              #
# The prerequisite for running this script is a fully built glibc in the glibc #
# directory, such as is provided for by the script build_glibc (which          #
# incidentally also applies the patches, so know what you are doing).          #
#                                                                              #
# This script should be used after making changes to the override support.     #
#                                                                              #
################################################################################

#!/bin/bash

#
# Check version number exists
#
if [ -z "$1" ]; then

    #
    # try to set version from existing library
    #
    version=`ls -l /lib/x86_64-linux-gnu/libc.so.6 | sed 's/.*libc\-\([0-9].[0-9][0-9]\).*/\1/'`
    if [ -z $version ]; then
    
        echo "*** Cannot determine glibc version on this system"
        exit 1
        
    fi
    
else

    #
    # Get version # from user
    #
    version=$1
    
fi

echo "Version number: $version"

#
# Create glibc source override patches
#
cd glibc/glibc_source
if [ -f "../glibc_"$version"_override.patch" ]; then

    cp ../glibc_"$version"_override.patch ../glibc_"$version"_override.patch.old
    
fi
git diff > ../glibc_"$version"_override.patch
cd ../..

#
# Create libc.map patch
#
# This relies on a copy of the old, unmodified map file existing in the
# directory above the build directory.
#
diff -u glibc/libc.map glibc/glibc_build/libc.map > glibc/libc_"$version"_.map.patch
